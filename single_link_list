#include<stdio.h>
#include<stdlib.h>

struct node
{
    int data;
    struct node *next;
};
struct node* create(struct node*p,int element)
{
    if(p==NULL)
    {
        p=(struct node *)malloc(sizeof(struct node));
        p->data=element;
        p->next=NULL;
    }
    else
    p->next= create(p->next,element);
    return (p);
}
void insertatbeg(struct node **p, int element)
{
    struct node *q;
    q=(struct node*)malloc(sizeof(struct node));
    q->data=element;
    q->next=*p;
    *p=q;
}
void insertatend(struct node *p, int element)
{
    struct node *q;
    q=(struct node*)malloc(sizeof(struct node));
    while(p->next !=NULL)
        {
            p=p->next;
        }
    p->next=q;
    q->data=element ;
    q->next= NULL;
}
void insertatany(struct node *p,int key, int element)
{
    struct node *q;
    q=(struct node*)malloc(sizeof(struct node));
    while((p->next !=NULL) && (p->data != key))
        {
            p=p->next;
        }
    q->next=p->next;
    q->data=element;
    p->next=q;
}
struct node* delnode(struct node *p, int n)
{
    int i;
    struct node *q, *r;
    if(p==NULL)
        printf("\nThe list is empty");
    else
    {
        q=NULL;
        r=p;
        i=1;
        while(i<n)
        {
            q=r;
            r=r->next;
            i=i+1;
        }
    if(q==NULL)
    {
        p=r->next;
        free (r);
    }
    else
    {
        q->next= r->next;
        free (r);
    }
    }
    return (p);
}
void traverse(struct node *p)
{
    printf("\nThe list is\t");
    while(p !=NULL)
    {
        printf("\t%d",p->data);
        p=p->next;
    }
}
int main()
{
    int num=0,j,val,k,n;
    struct node *head=NULL;

    printf("\n1. Create");
    printf("\n2. Insert at beginning");
    printf("\n3. Insert at end");
    printf("\n4. Insert at any specefic location");
    printf("\n5. Deletion of any node");
    printf("\n6. Traverse");
    printf("\n7. Exit");
    do
    {
        printf("\n Enter your choice=");
        scanf("%d",&j);

        switch(j)
        {
            case 1: printf("\n Enter the data to put on node=");
                    scanf("%d",&val);
                    head= create(head, val);
                    break;
            case 2: printf("\n Enter new data to insert on the node at beginning=");
                    scanf("%d",&val);
                    insertatbeg(&head,val);
                    break;
            case 3: printf("\n Enter new data to insert on the node at end=");
                    scanf("%d",&val);
                    insertatend(head,val);
                    break;
            case 4: printf("\n Enter new data to insert on the node=");
                    scanf("%d",&val);
                    printf("\n Enter the key element after which you want to insert a node=");
                    scanf("%d",&k);
                    insertatany(head,k,val);
                    break;
            case 5: printf("\n Enter the node no you want to delete=");
                    scanf("%d",&n);
                    head=delnode(head,n);
                    break;
            case 6: traverse(head);
                    break;
            case 7: exit(0);       
        }
    }
    while(num==0);
    return 0;
}
